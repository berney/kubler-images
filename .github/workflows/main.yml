name: Kubler Build
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  kubler:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v3

      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: 🔎 Inspect Runner
        run: |
          df -h
          free -m
          bash --version
          docker version
          docker info
          pwd
          echo $PATH

      - name: 👷 Install Kubler
        run: |
          cd ..
          curl -L https://github.com/edannenberg/kubler/archive/master.tar.gz | tar xz
          ls -l kubler-master/bin
          echo "$(pwd)/kubler-master/bin" >> $GITHUB_PATH

      - name: 👷 Kubler Version
        run: |
          export TERM
          kubler --help

      - name: 👷 Kubler Inspect Terminal
        run: |
          echo "TERM=$TERM"
          echo $PATH
          pwd
          env
          # test term colors
          kubler dep-graph xxx || true
          echo "export TERM"
          export TERM
          kubler dep-graph xxx || true
          echo "export TERM=dumb"
          export TERM
          export TERM=dumb
          kubler dep-graph xxx || true
          echo "export TERM=xterm"
          export TERM=xterm
          kubler dep-graph xxx || true

      # Cache Versions are based off key and path, so differnt path's can use same key
      #
      # Caches are immutable, so need unique key to create a new cache
      # `restore-keys` provides a list to restore a cache when key doesn't match
      # If there's no exact match, the most recent cache that partially matches will be used
      #
      - name: Cache Kubler Downloads
        uses: actions/cache@v3
        with:
          path: ~/.kubler/downloads/
          key: kubler-${{ github.sha }}
          restore-keys: |
            kubler-

      - name: Cache Kubler Gentoo Distfiles
        uses: actions/cache@v3
        with:
          path: ~/.kubler/distfiles/
          key: kubler-${{ github.sha }}
          restore-keys: |
            kubler-

      - name: Cache Kubler Gentoo Packages
        uses: actions/cache@v3
        with:
          path: ~/.kubler/packages/
          key: kubler-${{ github.sha }}
          restore-keys: |
            kubler-

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: 🐋 Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        #with:
        #  # This breaks kubler https://github.com/edannenberg/kubler/issues/215
        #  # Sets up `docker build` command as an alias to `docker buildx` (default `false`)
        #  install: true

      - name: 🐋 Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: 🐋 Docker Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          # this is the default, end of job will logout
          #logout: true

      - name: 🐋 Docker Buildx Inspect
        run: |
          docker version
          docker info
          docker buildx version
          docker buildx ls
          # `default` is the name of the normie docker builder
          docker buildx inspect default
          # The buildx builder is the default builder due to the `install: true` above
          docker buildx inspect "${{ steps.buildx.outputs.name }}"

      - name: 👷 Update Kubler (kubler-images, Gentoo Stage3)
        run: |
          export TERM
          ls -la ~/.kubler || true
          ls -la ~/.kubler/namespaces || true
          ls -la ~/.kubler/namespaces/kubler || true
          kubler update
          ls -la ~/.kubler || true
          ls -la ~/.kubler/namespaces || true
          ls -la ~/.kubler/namespaces/kubler || true

      - name: 👷 Fix Kubler Images bob-musl
        run: |
          cd ~/.kubler/namespaces/kubler/
          git remote -v
          git remote add berney https://github.com/berney/kubler-images-1.git
          git fetch --all
          git checkout berney/b-fix-util-linux-su-pam
          git diff master..HEAD

      - name: 👷 Add Custom Kubler Command(s)
        run: |
          echo "Kubler Commands (OG)"
          pwd
          ls -l
          tree -a -C ../kubler-master
          ls -l ../kubler-master
          ls -l ../kubler-master/cmd
          echo "Custom Kubler Commands"
          ls -l kubler/cmd
          rsync -avi kubler/cmd/* ../kubler-master/cmd/
          echo "Kubler Commands (now)"
          ls -l ../kubler-master/cmd

      - name: 👷 Kubler Get Latest Portage Date
        run: |
          export TERM
          PORTAGE_DATE=$(kubler portage)
          echo "PORTAGE_DATE=$PORTAGE_DATE"
          echo "PORTAGE_DATE=$PORTAGE_DATE" >> $GITHUB_ENV

      - name: 🚧 Build Images - kubler/busybox
        continue-on-error: true
        run: |
          export TERM
          echo "$PORTAGE_DATE"
          kubler build -v kubler/busybox

      - name: 🚧 Build Images - kubler/glibc
        continue-on-error: true
        run: |
          export TERM
          kubler build -v kubler/glibc

      - name: 🚧 Build Images - figlet
        continue-on-error: true
        run: |
          export TERM
          kubler build -v figlet

      - name: 🚧 Build Images - figlet-user
        continue-on-error: true
        run: |
          export TERM
          kubler build -v figlet-user

      - name: 🚧 Build Images - figlet-musl
        continue-on-error: true
        run: |
          export TERM
          kubler build -v figlet-musl

      - name: 🚧 Build Images - figlet-musl-static
        continue-on-error: true
        run: |
          export TERM
          kubler build -v figlet-musl-static

      - name: 🚧 Build Images - coturn
        continue-on-error: true
        run: |
          export TERM
          kubler build -v coturn

      - name: 🚧 Build Images - nmap
        continue-on-error: true
        run: |
          export TERM
          kubler build -v nmap

      - name: 🚧 Build Images - nmap-musl-static
        continue-on-error: true
        run: |
          export TERM
          kubler build -v nmap-musl-static

      - name: 🚧 Build Images - s6
        continue-on-error: true
        run: |
          export TERM
          kubler build -v s6

      - name: 🚧 Build Images - s6-busybox
        continue-on-error: true
        run: |
          export TERM
          kubler build -v s6-busybox

      - name: 🚧 Build Images - s6-coturn-busybox
        continue-on-error: true
        run: |
          export TERM
          kubler build -v s6-coturn-busybox

      - name: 🚧 Build Images - tmux
        continue-on-error: true
        run: |
          export TERM
          kubler build -v tmux

      - name: 🔎 Post Build Inspect
        run: |
          docker images
          docker ps -a
          df -h
          git status
          git ls-files -o
          ls -ld ~/.kubler
          ls -la ~/.kubler
          ls -ld ~/.kubler/log
          ls -la ~/.kubler/log
          ls -l ~/.kubler/log/build.log || true
          cat ~/.kubler/log/build.log || true
      - run: echo "🍏 This job's status is ${{ job.status }}."
