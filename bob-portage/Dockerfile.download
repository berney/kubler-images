# syntax=docker/dockerfile:1
# NOTE: syntax line needs to be first line, its a BuildKit only thing.

# We have this as a separate stage so we can override it's build context
# This is a way to copy files from outside directories, e.g. `~/.kubler/downloads/`
FROM scratch AS portage
# Kubler downloaded and cached this
ARG SNAPSHOT
COPY ${SNAPSHOT} /


FROM busybox:latest AS builder
ARG SNAPSHOT
#COPY --from=portage ${SNAPSHOT} /

# Bind mount means we don't need to copy whole directory
# - It's using `portage` build context
# - Can override the build context to allow copying files from outside directories
# Here-Documents added in docker/dockerfile:1.4
# Will implicictly use default shell, but can use a shebang to be explicit
RUN --mount=type=bind,target=/portage,from=portage <<-EOF
    #!/bin/sh
    set -eux
    mkdir -p /var/db/repos/
    xzcat /portage/${SNAPSHOT} | tar -xf - -C /var/db/repos
    mv /var/db/repos/portage /var/db/repos/gentoo
    # The portage tarball has a metadata directory already
    #mkdir -p /var/db/repos/gentoo/metadata
    # We are ephemeral so this isn't really needed
    # Mount should be read-only, so should fail here
    #rm /${SNAPSHOT}
EOF

FROM busybox:latest
COPY --from=builder /var/db/repos/gentoo /var/db/repos/gentoo

VOLUME /var/db/repos /var/cache/eix
