---
file:
  /goss:
    exists: true
    mode: "0755"
    #size: 10240000
    # goss calls `getent` which doesn't exit
    # `/etc/passwd` also doesn't exist
    # I want goss to compare raw numbers
    # but it always tries to translate with `getent`.
    #owner: 0
    #group: 0
    filetype: file
    contains: []
command:
  goss:
    exit-status: 0
    exec: [/goss]
    stdout:
      - 'NAME:'
      - '  goss - Quick and Easy server validation'
      - 'USAGE:'
      - ' goss [global options] command [command options] [arguments...]'
      - 'VERSION:'
      - '   v'
      - 'COMMANDS:'
      - '   validate, v  Validate system'
      - '   serve, s     Serve a health endpoint'
      - '   render, r    render gossfile after imports'
      - '   autoadd, aa  automatically add all matching resource to the test suite'
      - '   add, a       add a resource to the test suite'
      - '   help, h      Shows a list of commands or help for one command'
      - 'GLOBAL OPTIONS:'
      - '   --log-level value, --loglevel value, -L value, -l value  Goss log verbosity level (default: "INFO") [$GOSS_LOGLEVEL]'
      - '   --gossfile value, -g value                               Goss file to read from / write to (default: "./goss.yaml") [$GOSS_FILE]'
      - '   --vars value                                             json/yaml file containing variables for template [$GOSS_VARS]'
      - '   --vars-inline value                                      json/yaml string containing variables for template (overwrites vars) [$GOSS_VARS_INLINE]'
      - '   --package value                                          Package type to use [apk, dpkg, pacman, rpm]'
      - '   --help, -h                                               show help'
      - '   --version, -v                                            print the version'

  goss-help:
    exit-status: 0
    exec: [/goss, --help]
    stdout:
      - 'NAME:'
      - '  goss - Quick and Easy server validation'
      - 'USAGE:'
      - ' goss [global options] command [command options] [arguments...]'
      - 'VERSION:'
      - '   v'
      - 'COMMANDS:'
      - '   validate, v  Validate system'
      - '   serve, s     Serve a health endpoint'
      - '   render, r    render gossfile after imports'
      - '   autoadd, aa  automatically add all matching resource to the test suite'
      - '   add, a       add a resource to the test suite'
      - '   help, h      Shows a list of commands or help for one command'
      - 'GLOBAL OPTIONS:'
      - '   --log-level value, --loglevel value, -L value, -l value  Goss log verbosity level (default: "INFO") [$GOSS_LOGLEVEL]'
      - '   --gossfile value, -g value                               Goss file to read from / write to (default: "./goss.yaml") [$GOSS_FILE]'
      - '   --vars value                                             json/yaml file containing variables for template [$GOSS_VARS]'
      - '   --vars-inline value                                      json/yaml string containing variables for template (overwrites vars) [$GOSS_VARS_INLINE]'
      - '   --package value                                          Package type to use [apk, dpkg, pacman, rpm]'
      - '   --help, -h                                               show help'
      - '   --version, -v                                            print the version'
  goss-version:
    exit-status: 0
    exec: [/goss, --version]
    stdout:
      - goss version v
